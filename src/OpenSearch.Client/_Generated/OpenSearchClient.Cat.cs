/* SPDX-License-Identifier: Apache-2.0
*
* The OpenSearch Contributors require contributions made to
* this file be licensed under the Apache-2.0 license or a
* compatible open source license.
*/
/*
* Modifications Copyright OpenSearch Contributors. See
* GitHub history for details.
*
*  Licensed to Elasticsearch B.V. under one or more contributor
*  license agreements. See the NOTICE file distributed with
*  this work for additional information regarding copyright
*  ownership. Elasticsearch B.V. licenses this file to you under
*  the Apache License, Version 2.0 (the "License"); you may
*  not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing,
*  software distributed under the License is distributed on an
*  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
*  KIND, either express or implied.  See the License for the
*  specific language governing permissions and limitations
*  under the License.
*/
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//
// This file is automatically generated
// Please do not edit these files manually
// Run the following in the root of the repos:
//
//      *NIX        :   ./build.sh codegen
//      Windows     :   build.bat codegen
//
// -----------------------------------------------
// ReSharper disable RedundantUsingDirective
using System;
using System.Threading;
using System.Threading.Tasks;
using OpenSearch.Net.Specification.CatApi;

// ReSharper disable once CheckNamespace
// ReSharper disable RedundantTypeArgumentsOfMethod
namespace OpenSearch.Client.Specification.CatApi
{
    /// <summary>
    /// Cat APIs.
    /// <para>Not intended to be instantiated directly. Use the <see cref="IOpenSearchClient.Cat"/> property
    /// on <see cref="IOpenSearchClient"/>.
    /// </para>
    /// </summary>
    public partial class CatNamespace : NamespacedClientProxy
    {
        internal CatNamespace(OpenSearchClient client)
            : base(client) { }

        /// <summary>
        /// <c>GET</c> request to the <c>cat.aliases</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-aliases/">https://opensearch.org/docs/latest/api-reference/cat/cat-aliases/</a>
        /// </summary>
        public CatResponse<CatAliasesRecord> Aliases(
            Func<CatAliasesDescriptor, ICatAliasesRequest> selector = null
        ) => Aliases(selector.InvokeOrDefault(new CatAliasesDescriptor()));

        /// <summary>
        /// <c>GET</c> request to the <c>cat.aliases</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-aliases/">https://opensearch.org/docs/latest/api-reference/cat/cat-aliases/</a>
        /// </summary>
        public Task<CatResponse<CatAliasesRecord>> AliasesAsync(
            Func<CatAliasesDescriptor, ICatAliasesRequest> selector = null,
            CancellationToken ct = default
        ) => AliasesAsync(selector.InvokeOrDefault(new CatAliasesDescriptor()), ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.aliases</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-aliases/">https://opensearch.org/docs/latest/api-reference/cat/cat-aliases/</a>
        /// </summary>
        public CatResponse<CatAliasesRecord> Aliases(ICatAliasesRequest request) =>
            DoCat<ICatAliasesRequest, CatAliasesRequestParameters, CatAliasesRecord>(request);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.aliases</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-aliases/">https://opensearch.org/docs/latest/api-reference/cat/cat-aliases/</a>
        /// </summary>
        public Task<CatResponse<CatAliasesRecord>> AliasesAsync(
            ICatAliasesRequest request,
            CancellationToken ct = default
        ) =>
            DoCatAsync<ICatAliasesRequest, CatAliasesRequestParameters, CatAliasesRecord>(
                request,
                ct
            );

        /// <summary>
        /// <c>GET</c> request to the <c>cat.allocation</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-allocation/">https://opensearch.org/docs/latest/api-reference/cat/cat-allocation/</a>
        /// </summary>
        public CatResponse<CatAllocationRecord> Allocation(
            Func<CatAllocationDescriptor, ICatAllocationRequest> selector = null
        ) => Allocation(selector.InvokeOrDefault(new CatAllocationDescriptor()));

        /// <summary>
        /// <c>GET</c> request to the <c>cat.allocation</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-allocation/">https://opensearch.org/docs/latest/api-reference/cat/cat-allocation/</a>
        /// </summary>
        public Task<CatResponse<CatAllocationRecord>> AllocationAsync(
            Func<CatAllocationDescriptor, ICatAllocationRequest> selector = null,
            CancellationToken ct = default
        ) => AllocationAsync(selector.InvokeOrDefault(new CatAllocationDescriptor()), ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.allocation</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-allocation/">https://opensearch.org/docs/latest/api-reference/cat/cat-allocation/</a>
        /// </summary>
        public CatResponse<CatAllocationRecord> Allocation(ICatAllocationRequest request) =>
            DoCat<ICatAllocationRequest, CatAllocationRequestParameters, CatAllocationRecord>(
                request
            );

        /// <summary>
        /// <c>GET</c> request to the <c>cat.allocation</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-allocation/">https://opensearch.org/docs/latest/api-reference/cat/cat-allocation/</a>
        /// </summary>
        public Task<CatResponse<CatAllocationRecord>> AllocationAsync(
            ICatAllocationRequest request,
            CancellationToken ct = default
        ) =>
            DoCatAsync<ICatAllocationRequest, CatAllocationRequestParameters, CatAllocationRecord>(
                request,
                ct
            );

        /// <summary>
        /// <c>GET</c> request to the <c>cat.count</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-count/">https://opensearch.org/docs/latest/api-reference/cat/cat-count/</a>
        /// </summary>
        public CatResponse<CatCountRecord> Count(
            Func<CatCountDescriptor, ICatCountRequest> selector = null
        ) => Count(selector.InvokeOrDefault(new CatCountDescriptor()));

        /// <summary>
        /// <c>GET</c> request to the <c>cat.count</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-count/">https://opensearch.org/docs/latest/api-reference/cat/cat-count/</a>
        /// </summary>
        public Task<CatResponse<CatCountRecord>> CountAsync(
            Func<CatCountDescriptor, ICatCountRequest> selector = null,
            CancellationToken ct = default
        ) => CountAsync(selector.InvokeOrDefault(new CatCountDescriptor()), ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.count</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-count/">https://opensearch.org/docs/latest/api-reference/cat/cat-count/</a>
        /// </summary>
        public CatResponse<CatCountRecord> Count(ICatCountRequest request) =>
            DoCat<ICatCountRequest, CatCountRequestParameters, CatCountRecord>(request);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.count</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-count/">https://opensearch.org/docs/latest/api-reference/cat/cat-count/</a>
        /// </summary>
        public Task<CatResponse<CatCountRecord>> CountAsync(
            ICatCountRequest request,
            CancellationToken ct = default
        ) => DoCatAsync<ICatCountRequest, CatCountRequestParameters, CatCountRecord>(request, ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.fielddata</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-field-data/">https://opensearch.org/docs/latest/api-reference/cat/cat-field-data/</a>
        /// </summary>
        public CatResponse<CatFielddataRecord> Fielddata(
            Func<CatFielddataDescriptor, ICatFielddataRequest> selector = null
        ) => Fielddata(selector.InvokeOrDefault(new CatFielddataDescriptor()));

        /// <summary>
        /// <c>GET</c> request to the <c>cat.fielddata</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-field-data/">https://opensearch.org/docs/latest/api-reference/cat/cat-field-data/</a>
        /// </summary>
        public Task<CatResponse<CatFielddataRecord>> FielddataAsync(
            Func<CatFielddataDescriptor, ICatFielddataRequest> selector = null,
            CancellationToken ct = default
        ) => FielddataAsync(selector.InvokeOrDefault(new CatFielddataDescriptor()), ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.fielddata</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-field-data/">https://opensearch.org/docs/latest/api-reference/cat/cat-field-data/</a>
        /// </summary>
        public CatResponse<CatFielddataRecord> Fielddata(ICatFielddataRequest request) =>
            DoCat<ICatFielddataRequest, CatFielddataRequestParameters, CatFielddataRecord>(request);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.fielddata</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-field-data/">https://opensearch.org/docs/latest/api-reference/cat/cat-field-data/</a>
        /// </summary>
        public Task<CatResponse<CatFielddataRecord>> FielddataAsync(
            ICatFielddataRequest request,
            CancellationToken ct = default
        ) =>
            DoCatAsync<ICatFielddataRequest, CatFielddataRequestParameters, CatFielddataRecord>(
                request,
                ct
            );

        /// <summary>
        /// <c>GET</c> request to the <c>cat.health</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-health/">https://opensearch.org/docs/latest/api-reference/cat/cat-health/</a>
        /// </summary>
        public CatResponse<CatHealthRecord> Health(
            Func<CatHealthDescriptor, ICatHealthRequest> selector = null
        ) => Health(selector.InvokeOrDefault(new CatHealthDescriptor()));

        /// <summary>
        /// <c>GET</c> request to the <c>cat.health</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-health/">https://opensearch.org/docs/latest/api-reference/cat/cat-health/</a>
        /// </summary>
        public Task<CatResponse<CatHealthRecord>> HealthAsync(
            Func<CatHealthDescriptor, ICatHealthRequest> selector = null,
            CancellationToken ct = default
        ) => HealthAsync(selector.InvokeOrDefault(new CatHealthDescriptor()), ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.health</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-health/">https://opensearch.org/docs/latest/api-reference/cat/cat-health/</a>
        /// </summary>
        public CatResponse<CatHealthRecord> Health(ICatHealthRequest request) =>
            DoCat<ICatHealthRequest, CatHealthRequestParameters, CatHealthRecord>(request);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.health</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-health/">https://opensearch.org/docs/latest/api-reference/cat/cat-health/</a>
        /// </summary>
        public Task<CatResponse<CatHealthRecord>> HealthAsync(
            ICatHealthRequest request,
            CancellationToken ct = default
        ) =>
            DoCatAsync<ICatHealthRequest, CatHealthRequestParameters, CatHealthRecord>(request, ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.help</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/index/">https://opensearch.org/docs/latest/api-reference/cat/index/</a>
        /// </summary>
        public CatResponse<CatHelpRecord> Help(
            Func<CatHelpDescriptor, ICatHelpRequest> selector = null
        ) => Help(selector.InvokeOrDefault(new CatHelpDescriptor()));

        /// <summary>
        /// <c>GET</c> request to the <c>cat.help</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/index/">https://opensearch.org/docs/latest/api-reference/cat/index/</a>
        /// </summary>
        public Task<CatResponse<CatHelpRecord>> HelpAsync(
            Func<CatHelpDescriptor, ICatHelpRequest> selector = null,
            CancellationToken ct = default
        ) => HelpAsync(selector.InvokeOrDefault(new CatHelpDescriptor()), ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.help</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/index/">https://opensearch.org/docs/latest/api-reference/cat/index/</a>
        /// </summary>
        public CatResponse<CatHelpRecord> Help(ICatHelpRequest request) =>
            DoCat<ICatHelpRequest, CatHelpRequestParameters, CatHelpRecord>(request);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.help</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/index/">https://opensearch.org/docs/latest/api-reference/cat/index/</a>
        /// </summary>
        public Task<CatResponse<CatHelpRecord>> HelpAsync(
            ICatHelpRequest request,
            CancellationToken ct = default
        ) => DoCatAsync<ICatHelpRequest, CatHelpRequestParameters, CatHelpRecord>(request, ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.indices</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-indices/">https://opensearch.org/docs/latest/api-reference/cat/cat-indices/</a>
        /// </summary>
        public CatResponse<CatIndicesRecord> Indices(
            Func<CatIndicesDescriptor, ICatIndicesRequest> selector = null
        ) => Indices(selector.InvokeOrDefault(new CatIndicesDescriptor()));

        /// <summary>
        /// <c>GET</c> request to the <c>cat.indices</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-indices/">https://opensearch.org/docs/latest/api-reference/cat/cat-indices/</a>
        /// </summary>
        public Task<CatResponse<CatIndicesRecord>> IndicesAsync(
            Func<CatIndicesDescriptor, ICatIndicesRequest> selector = null,
            CancellationToken ct = default
        ) => IndicesAsync(selector.InvokeOrDefault(new CatIndicesDescriptor()), ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.indices</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-indices/">https://opensearch.org/docs/latest/api-reference/cat/cat-indices/</a>
        /// </summary>
        public CatResponse<CatIndicesRecord> Indices(ICatIndicesRequest request) =>
            DoCat<ICatIndicesRequest, CatIndicesRequestParameters, CatIndicesRecord>(request);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.indices</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-indices/">https://opensearch.org/docs/latest/api-reference/cat/cat-indices/</a>
        /// </summary>
        public Task<CatResponse<CatIndicesRecord>> IndicesAsync(
            ICatIndicesRequest request,
            CancellationToken ct = default
        ) =>
            DoCatAsync<ICatIndicesRequest, CatIndicesRequestParameters, CatIndicesRecord>(
                request,
                ct
            );

        /// <summary>
        /// <c>GET</c> request to the <c>cat.master</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/">https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/</a>
        /// </summary>
        [Obsolete(
            "Deprecated as of: 2.0, reason: To promote inclusive language, please use '/_cat/cluster_manager' instead."
        )]
        public CatResponse<CatMasterRecord> Master(
            Func<CatMasterDescriptor, ICatMasterRequest> selector = null
        ) => Master(selector.InvokeOrDefault(new CatMasterDescriptor()));

        /// <summary>
        /// <c>GET</c> request to the <c>cat.master</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/">https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/</a>
        /// </summary>
        [Obsolete(
            "Deprecated as of: 2.0, reason: To promote inclusive language, please use '/_cat/cluster_manager' instead."
        )]
        public Task<CatResponse<CatMasterRecord>> MasterAsync(
            Func<CatMasterDescriptor, ICatMasterRequest> selector = null,
            CancellationToken ct = default
        ) => MasterAsync(selector.InvokeOrDefault(new CatMasterDescriptor()), ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.master</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/">https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/</a>
        /// </summary>
        [Obsolete(
            "Deprecated as of: 2.0, reason: To promote inclusive language, please use '/_cat/cluster_manager' instead."
        )]
        public CatResponse<CatMasterRecord> Master(ICatMasterRequest request) =>
            DoCat<ICatMasterRequest, CatMasterRequestParameters, CatMasterRecord>(request);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.master</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/">https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/</a>
        /// </summary>
        [Obsolete(
            "Deprecated as of: 2.0, reason: To promote inclusive language, please use '/_cat/cluster_manager' instead."
        )]
        public Task<CatResponse<CatMasterRecord>> MasterAsync(
            ICatMasterRequest request,
            CancellationToken ct = default
        ) =>
            DoCatAsync<ICatMasterRequest, CatMasterRequestParameters, CatMasterRecord>(request, ct);
    }
}
