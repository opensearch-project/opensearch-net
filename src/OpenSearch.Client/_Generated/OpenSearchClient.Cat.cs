/* SPDX-License-Identifier: Apache-2.0
*
* The OpenSearch Contributors require contributions made to
* this file be licensed under the Apache-2.0 license or a
* compatible open source license.
*/
/*
* Modifications Copyright OpenSearch Contributors. See
* GitHub history for details.
*
*  Licensed to Elasticsearch B.V. under one or more contributor
*  license agreements. See the NOTICE file distributed with
*  this work for additional information regarding copyright
*  ownership. Elasticsearch B.V. licenses this file to you under
*  the Apache License, Version 2.0 (the "License"); you may
*  not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing,
*  software distributed under the License is distributed on an
*  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
*  KIND, either express or implied.  See the License for the
*  specific language governing permissions and limitations
*  under the License.
*/
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//
// This file is automatically generated
// Please do not edit these files manually
// Run the following in the root of the repos:
//
//      *NIX        :   ./build.sh codegen
//      Windows     :   build.bat codegen
//
// -----------------------------------------------
// ReSharper disable RedundantUsingDirective
using System;
using System.Threading;
using System.Threading.Tasks;
using OpenSearch.Net.Specification.CatApi;

// ReSharper disable once CheckNamespace
// ReSharper disable RedundantTypeArgumentsOfMethod
namespace OpenSearch.Client.Specification.CatApi
{
    /// <summary>
    /// Cat APIs.
    /// <para>Not intended to be instantiated directly. Use the <see cref="IOpenSearchClient.Cat"/> property
    /// on <see cref="IOpenSearchClient"/>.
    /// </para>
    /// </summary>
    public partial class CatNamespace : NamespacedClientProxy
    {
        internal CatNamespace(OpenSearchClient client)
            : base(client) { }

        /// <summary>
        /// <c>GET</c> request to the <c>cat.all_pit_segments</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/search-plugins/point-in-time-api/">https://opensearch.org/docs/latest/search-plugins/point-in-time-api/</a>
        /// </summary>
        /// <remarks>Supported by OpenSearch servers of version 2.4.0 or greater.</remarks>
        public CatResponse<CatAllPitSegmentsRecord> AllPitSegments(
            Func<CatAllPitSegmentsDescriptor, ICatAllPitSegmentsRequest> selector = null
        ) => AllPitSegments(selector.InvokeOrDefault(new CatAllPitSegmentsDescriptor()));

        /// <summary>
        /// <c>GET</c> request to the <c>cat.all_pit_segments</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/search-plugins/point-in-time-api/">https://opensearch.org/docs/latest/search-plugins/point-in-time-api/</a>
        /// </summary>
        /// <remarks>Supported by OpenSearch servers of version 2.4.0 or greater.</remarks>
        public Task<CatResponse<CatAllPitSegmentsRecord>> AllPitSegmentsAsync(
            Func<CatAllPitSegmentsDescriptor, ICatAllPitSegmentsRequest> selector = null,
            CancellationToken ct = default
        ) => AllPitSegmentsAsync(selector.InvokeOrDefault(new CatAllPitSegmentsDescriptor()), ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.all_pit_segments</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/search-plugins/point-in-time-api/">https://opensearch.org/docs/latest/search-plugins/point-in-time-api/</a>
        /// </summary>
        /// <remarks>Supported by OpenSearch servers of version 2.4.0 or greater.</remarks>
        public CatResponse<CatAllPitSegmentsRecord> AllPitSegments(
            ICatAllPitSegmentsRequest request
        ) =>
            DoCat<
                ICatAllPitSegmentsRequest,
                CatAllPitSegmentsRequestParameters,
                CatAllPitSegmentsRecord
            >(request);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.all_pit_segments</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/search-plugins/point-in-time-api/">https://opensearch.org/docs/latest/search-plugins/point-in-time-api/</a>
        /// </summary>
        /// <remarks>Supported by OpenSearch servers of version 2.4.0 or greater.</remarks>
        public Task<CatResponse<CatAllPitSegmentsRecord>> AllPitSegmentsAsync(
            ICatAllPitSegmentsRequest request,
            CancellationToken ct = default
        ) =>
            DoCatAsync<
                ICatAllPitSegmentsRequest,
                CatAllPitSegmentsRequestParameters,
                CatAllPitSegmentsRecord
            >(request, ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.pit_segments</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/search-plugins/point-in-time-api/">https://opensearch.org/docs/latest/search-plugins/point-in-time-api/</a>
        /// </summary>
        /// <remarks>Supported by OpenSearch servers of version 2.4.0 or greater.</remarks>
        public CatResponse<CatPitSegmentsRecord> PitSegments(
            Func<CatPitSegmentsDescriptor, ICatPitSegmentsRequest> selector = null
        ) => PitSegments(selector.InvokeOrDefault(new CatPitSegmentsDescriptor()));

        /// <summary>
        /// <c>GET</c> request to the <c>cat.pit_segments</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/search-plugins/point-in-time-api/">https://opensearch.org/docs/latest/search-plugins/point-in-time-api/</a>
        /// </summary>
        /// <remarks>Supported by OpenSearch servers of version 2.4.0 or greater.</remarks>
        public Task<CatResponse<CatPitSegmentsRecord>> PitSegmentsAsync(
            Func<CatPitSegmentsDescriptor, ICatPitSegmentsRequest> selector = null,
            CancellationToken ct = default
        ) => PitSegmentsAsync(selector.InvokeOrDefault(new CatPitSegmentsDescriptor()), ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.pit_segments</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/search-plugins/point-in-time-api/">https://opensearch.org/docs/latest/search-plugins/point-in-time-api/</a>
        /// </summary>
        /// <remarks>Supported by OpenSearch servers of version 2.4.0 or greater.</remarks>
        public CatResponse<CatPitSegmentsRecord> PitSegments(ICatPitSegmentsRequest request) =>
            DoCat<ICatPitSegmentsRequest, CatPitSegmentsRequestParameters, CatPitSegmentsRecord>(
                request
            );

        /// <summary>
        /// <c>GET</c> request to the <c>cat.pit_segments</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/search-plugins/point-in-time-api/">https://opensearch.org/docs/latest/search-plugins/point-in-time-api/</a>
        /// </summary>
        /// <remarks>Supported by OpenSearch servers of version 2.4.0 or greater.</remarks>
        public Task<CatResponse<CatPitSegmentsRecord>> PitSegmentsAsync(
            ICatPitSegmentsRequest request,
            CancellationToken ct = default
        ) =>
            DoCatAsync<
                ICatPitSegmentsRequest,
                CatPitSegmentsRequestParameters,
                CatPitSegmentsRecord
            >(request, ct);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.segment_replication</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-segment-replication/">https://opensearch.org/docs/latest/api-reference/cat/cat-segment-replication/</a>
        /// </summary>
        /// <remarks>Supported by OpenSearch servers of version 2.6.0 or greater.</remarks>
        public CatResponse<CatSegmentReplicationRecord> SegmentReplication(
            Func<CatSegmentReplicationDescriptor, ICatSegmentReplicationRequest> selector = null
        ) => SegmentReplication(selector.InvokeOrDefault(new CatSegmentReplicationDescriptor()));

        /// <summary>
        /// <c>GET</c> request to the <c>cat.segment_replication</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-segment-replication/">https://opensearch.org/docs/latest/api-reference/cat/cat-segment-replication/</a>
        /// </summary>
        /// <remarks>Supported by OpenSearch servers of version 2.6.0 or greater.</remarks>
        public Task<CatResponse<CatSegmentReplicationRecord>> SegmentReplicationAsync(
            Func<CatSegmentReplicationDescriptor, ICatSegmentReplicationRequest> selector = null,
            CancellationToken ct = default
        ) =>
            SegmentReplicationAsync(
                selector.InvokeOrDefault(new CatSegmentReplicationDescriptor()),
                ct
            );

        /// <summary>
        /// <c>GET</c> request to the <c>cat.segment_replication</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-segment-replication/">https://opensearch.org/docs/latest/api-reference/cat/cat-segment-replication/</a>
        /// </summary>
        /// <remarks>Supported by OpenSearch servers of version 2.6.0 or greater.</remarks>
        public CatResponse<CatSegmentReplicationRecord> SegmentReplication(
            ICatSegmentReplicationRequest request
        ) =>
            DoCat<
                ICatSegmentReplicationRequest,
                CatSegmentReplicationRequestParameters,
                CatSegmentReplicationRecord
            >(request);

        /// <summary>
        /// <c>GET</c> request to the <c>cat.segment_replication</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/api-reference/cat/cat-segment-replication/">https://opensearch.org/docs/latest/api-reference/cat/cat-segment-replication/</a>
        /// </summary>
        /// <remarks>Supported by OpenSearch servers of version 2.6.0 or greater.</remarks>
        public Task<CatResponse<CatSegmentReplicationRecord>> SegmentReplicationAsync(
            ICatSegmentReplicationRequest request,
            CancellationToken ct = default
        ) =>
            DoCatAsync<
                ICatSegmentReplicationRequest,
                CatSegmentReplicationRequestParameters,
                CatSegmentReplicationRecord
            >(request, ct);
    }
}
