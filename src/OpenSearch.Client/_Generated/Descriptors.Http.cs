/* SPDX-License-Identifier: Apache-2.0
*
* The OpenSearch Contributors require contributions made to
* this file be licensed under the Apache-2.0 license or a
* compatible open source license.
*/
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//
// This file is automatically generated
// Please do not edit these files manually
// Run the following in the root of the repos:
//
//      *NIX        :   ./build.sh codegen
//      Windows     :   build.bat codegen
//
// -----------------------------------------------

using OpenSearch.Net.Specification.HttpApi;

namespace OpenSearch.Client;

public class HttpDeleteDescriptor
    : ArbitraryHttpRequestDescriptor<
        HttpDeleteDescriptor,
        HttpDeleteRequestParameters,
        IHttpDeleteRequest
    >,
        IHttpDeleteRequest
{
    public HttpDeleteDescriptor(string path)
        : base(path) { }
}

public class HttpGetDescriptor
    : ArbitraryHttpRequestDescriptor<HttpGetDescriptor, HttpGetRequestParameters, IHttpGetRequest>,
        IHttpGetRequest
{
    public HttpGetDescriptor(string path)
        : base(path) { }
}

public class HttpHeadDescriptor
    : ArbitraryHttpRequestDescriptor<
        HttpHeadDescriptor,
        HttpHeadRequestParameters,
        IHttpHeadRequest
    >,
        IHttpHeadRequest
{
    public HttpHeadDescriptor(string path)
        : base(path) { }
}

public class HttpPatchDescriptor
    : ArbitraryBodyHttpRequestDescriptor<
        HttpPatchDescriptor,
        HttpPatchRequestParameters,
        IHttpPatchRequest
    >,
        IHttpPatchRequest
{
    public HttpPatchDescriptor(string path)
        : base(path) { }
}

public class HttpPostDescriptor
    : ArbitraryBodyHttpRequestDescriptor<
        HttpPostDescriptor,
        HttpPostRequestParameters,
        IHttpPostRequest
    >,
        IHttpPostRequest
{
    public HttpPostDescriptor(string path)
        : base(path) { }
}

public class HttpPutDescriptor
    : ArbitraryBodyHttpRequestDescriptor<
        HttpPutDescriptor,
        HttpPutRequestParameters,
        IHttpPutRequest
    >,
        IHttpPutRequest
{
    public HttpPutDescriptor(string path)
        : base(path) { }
}
