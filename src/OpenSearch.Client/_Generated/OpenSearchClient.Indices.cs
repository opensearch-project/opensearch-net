/* SPDX-License-Identifier: Apache-2.0
*
* The OpenSearch Contributors require contributions made to
* this file be licensed under the Apache-2.0 license or a
* compatible open source license.
*/
/*
* Modifications Copyright OpenSearch Contributors. See
* GitHub history for details.
*
*  Licensed to Elasticsearch B.V. under one or more contributor
*  license agreements. See the NOTICE file distributed with
*  this work for additional information regarding copyright
*  ownership. Elasticsearch B.V. licenses this file to you under
*  the Apache License, Version 2.0 (the "License"); you may
*  not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing,
*  software distributed under the License is distributed on an
*  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
*  KIND, either express or implied.  See the License for the
*  specific language governing permissions and limitations
*  under the License.
*/
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//
// This file is automatically generated
// Please do not edit these files manually
// Run the following in the root of the repos:
//
//      *NIX        :   ./build.sh codegen
//      Windows     :   build.bat codegen
//
// -----------------------------------------------
// ReSharper disable RedundantUsingDirective
using System;
using System.Threading;
using System.Threading.Tasks;
using OpenSearch.Net.Specification.IndicesApi;

// ReSharper disable once CheckNamespace
// ReSharper disable RedundantTypeArgumentsOfMethod
namespace OpenSearch.Client.Specification.IndicesApi
{
    /// <summary>
    /// Indices APIs.
    /// <para>Use the <see cref="IOpenSearchClient.Indices"/> property on <see cref="IOpenSearchClient"/>.</para>
    /// </summary>
    public partial interface IIndicesNamespace
    {
        /// <summary>
        /// <c>DELETE</c> request to the <c>indices.delete_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template">https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template</a>
        /// </summary>
        DeleteComposableIndexTemplateResponse DeleteComposableTemplate(
            Name name,
            Func<
                DeleteComposableIndexTemplateDescriptor,
                IDeleteComposableIndexTemplateRequest
            > selector = null
        );

        /// <summary>
        /// <c>DELETE</c> request to the <c>indices.delete_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template">https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template</a>
        /// </summary>
        Task<DeleteComposableIndexTemplateResponse> DeleteComposableTemplateAsync(
            Name name,
            Func<
                DeleteComposableIndexTemplateDescriptor,
                IDeleteComposableIndexTemplateRequest
            > selector = null,
            CancellationToken ct = default
        );

        /// <summary>
        /// <c>DELETE</c> request to the <c>indices.delete_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template">https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template</a>
        /// </summary>
        DeleteComposableIndexTemplateResponse DeleteComposableTemplate(
            IDeleteComposableIndexTemplateRequest request
        );

        /// <summary>
        /// <c>DELETE</c> request to the <c>indices.delete_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template">https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template</a>
        /// </summary>
        Task<DeleteComposableIndexTemplateResponse> DeleteComposableTemplateAsync(
            IDeleteComposableIndexTemplateRequest request,
            CancellationToken ct = default
        );

        /// <summary>
        /// <c>HEAD</c> request to the <c>indices.exists_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        ExistsResponse ComposableTemplateExists(
            Name name,
            Func<
                ComposableIndexTemplateExistsDescriptor,
                IComposableIndexTemplateExistsRequest
            > selector = null
        );

        /// <summary>
        /// <c>HEAD</c> request to the <c>indices.exists_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        Task<ExistsResponse> ComposableTemplateExistsAsync(
            Name name,
            Func<
                ComposableIndexTemplateExistsDescriptor,
                IComposableIndexTemplateExistsRequest
            > selector = null,
            CancellationToken ct = default
        );

        /// <summary>
        /// <c>HEAD</c> request to the <c>indices.exists_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        ExistsResponse ComposableTemplateExists(IComposableIndexTemplateExistsRequest request);

        /// <summary>
        /// <c>HEAD</c> request to the <c>indices.exists_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        Task<ExistsResponse> ComposableTemplateExistsAsync(
            IComposableIndexTemplateExistsRequest request,
            CancellationToken ct = default
        );

        /// <summary>
        /// <c>GET</c> request to the <c>indices.get_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        GetComposableIndexTemplateResponse GetComposableTemplate(
            Name name = null,
            Func<
                GetComposableIndexTemplateDescriptor,
                IGetComposableIndexTemplateRequest
            > selector = null
        );

        /// <summary>
        /// <c>GET</c> request to the <c>indices.get_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        Task<GetComposableIndexTemplateResponse> GetComposableTemplateAsync(
            Name name = null,
            Func<
                GetComposableIndexTemplateDescriptor,
                IGetComposableIndexTemplateRequest
            > selector = null,
            CancellationToken ct = default
        );

        /// <summary>
        /// <c>GET</c> request to the <c>indices.get_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        GetComposableIndexTemplateResponse GetComposableTemplate(
            IGetComposableIndexTemplateRequest request
        );

        /// <summary>
        /// <c>GET</c> request to the <c>indices.get_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        Task<GetComposableIndexTemplateResponse> GetComposableTemplateAsync(
            IGetComposableIndexTemplateRequest request,
            CancellationToken ct = default
        );

        /// <summary>
        /// <c>PUT</c> request to the <c>indices.put_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        PutComposableIndexTemplateResponse PutComposableTemplate(
            Name name,
            Func<PutComposableIndexTemplateDescriptor, IPutComposableIndexTemplateRequest> selector
        );

        /// <summary>
        /// <c>PUT</c> request to the <c>indices.put_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        Task<PutComposableIndexTemplateResponse> PutComposableTemplateAsync(
            Name name,
            Func<PutComposableIndexTemplateDescriptor, IPutComposableIndexTemplateRequest> selector,
            CancellationToken ct = default
        );

        /// <summary>
        /// <c>PUT</c> request to the <c>indices.put_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        PutComposableIndexTemplateResponse PutComposableTemplate(
            IPutComposableIndexTemplateRequest request
        );

        /// <summary>
        /// <c>PUT</c> request to the <c>indices.put_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        Task<PutComposableIndexTemplateResponse> PutComposableTemplateAsync(
            IPutComposableIndexTemplateRequest request,
            CancellationToken ct = default
        );
    }

    /// <summary>
    /// Indices implementation.
    /// <para>Not intended to be instantiated directly. Use the <see cref="IOpenSearchClient.Indices"/> property
    /// on <see cref="IOpenSearchClient"/>.
    /// </para>
    /// </summary>
    public partial class IndicesNamespace : NamespacedClientProxy, IIndicesNamespace
    {
        internal IndicesNamespace(OpenSearchClient client)
            : base(client) { }

        /// <summary>
        /// <c>DELETE</c> request to the <c>indices.delete_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template">https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template</a>
        /// </summary>
        public DeleteComposableIndexTemplateResponse DeleteComposableTemplate(
            Name name,
            Func<
                DeleteComposableIndexTemplateDescriptor,
                IDeleteComposableIndexTemplateRequest
            > selector = null
        ) =>
            DeleteComposableTemplate(
                selector.InvokeOrDefault(new DeleteComposableIndexTemplateDescriptor(name: name))
            );

        /// <summary>
        /// <c>DELETE</c> request to the <c>indices.delete_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template">https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template</a>
        /// </summary>
        public Task<DeleteComposableIndexTemplateResponse> DeleteComposableTemplateAsync(
            Name name,
            Func<
                DeleteComposableIndexTemplateDescriptor,
                IDeleteComposableIndexTemplateRequest
            > selector = null,
            CancellationToken ct = default
        ) =>
            DeleteComposableTemplateAsync(
                selector.InvokeOrDefault(new DeleteComposableIndexTemplateDescriptor(name: name)),
                ct
            );

        /// <summary>
        /// <c>DELETE</c> request to the <c>indices.delete_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template">https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template</a>
        /// </summary>
        public DeleteComposableIndexTemplateResponse DeleteComposableTemplate(
            IDeleteComposableIndexTemplateRequest request
        ) =>
            DoRequest<IDeleteComposableIndexTemplateRequest, DeleteComposableIndexTemplateResponse>(
                request,
                request.RequestParameters
            );

        /// <summary>
        /// <c>DELETE</c> request to the <c>indices.delete_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template">https://opensearch.org/docs/latest/im-plugin/index-templates/#delete-a-template</a>
        /// </summary>
        public Task<DeleteComposableIndexTemplateResponse> DeleteComposableTemplateAsync(
            IDeleteComposableIndexTemplateRequest request,
            CancellationToken ct = default
        ) =>
            DoRequestAsync<
                IDeleteComposableIndexTemplateRequest,
                DeleteComposableIndexTemplateResponse
            >(request, request.RequestParameters, ct);

        /// <summary>
        /// <c>HEAD</c> request to the <c>indices.exists_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        public ExistsResponse ComposableTemplateExists(
            Name name,
            Func<
                ComposableIndexTemplateExistsDescriptor,
                IComposableIndexTemplateExistsRequest
            > selector = null
        ) =>
            ComposableTemplateExists(
                selector.InvokeOrDefault(new ComposableIndexTemplateExistsDescriptor(name: name))
            );

        /// <summary>
        /// <c>HEAD</c> request to the <c>indices.exists_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        public Task<ExistsResponse> ComposableTemplateExistsAsync(
            Name name,
            Func<
                ComposableIndexTemplateExistsDescriptor,
                IComposableIndexTemplateExistsRequest
            > selector = null,
            CancellationToken ct = default
        ) =>
            ComposableTemplateExistsAsync(
                selector.InvokeOrDefault(new ComposableIndexTemplateExistsDescriptor(name: name)),
                ct
            );

        /// <summary>
        /// <c>HEAD</c> request to the <c>indices.exists_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        public ExistsResponse ComposableTemplateExists(
            IComposableIndexTemplateExistsRequest request
        ) =>
            DoRequest<IComposableIndexTemplateExistsRequest, ExistsResponse>(
                request,
                request.RequestParameters
            );

        /// <summary>
        /// <c>HEAD</c> request to the <c>indices.exists_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        public Task<ExistsResponse> ComposableTemplateExistsAsync(
            IComposableIndexTemplateExistsRequest request,
            CancellationToken ct = default
        ) =>
            DoRequestAsync<IComposableIndexTemplateExistsRequest, ExistsResponse>(
                request,
                request.RequestParameters,
                ct
            );

        /// <summary>
        /// <c>GET</c> request to the <c>indices.get_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        public GetComposableIndexTemplateResponse GetComposableTemplate(
            Name name = null,
            Func<
                GetComposableIndexTemplateDescriptor,
                IGetComposableIndexTemplateRequest
            > selector = null
        ) =>
            GetComposableTemplate(
                selector.InvokeOrDefault(
                    new GetComposableIndexTemplateDescriptor().Name(name: name)
                )
            );

        /// <summary>
        /// <c>GET</c> request to the <c>indices.get_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        public Task<GetComposableIndexTemplateResponse> GetComposableTemplateAsync(
            Name name = null,
            Func<
                GetComposableIndexTemplateDescriptor,
                IGetComposableIndexTemplateRequest
            > selector = null,
            CancellationToken ct = default
        ) =>
            GetComposableTemplateAsync(
                selector.InvokeOrDefault(
                    new GetComposableIndexTemplateDescriptor().Name(name: name)
                ),
                ct
            );

        /// <summary>
        /// <c>GET</c> request to the <c>indices.get_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        public GetComposableIndexTemplateResponse GetComposableTemplate(
            IGetComposableIndexTemplateRequest request
        ) =>
            DoRequest<IGetComposableIndexTemplateRequest, GetComposableIndexTemplateResponse>(
                request,
                request.RequestParameters
            );

        /// <summary>
        /// <c>GET</c> request to the <c>indices.get_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        public Task<GetComposableIndexTemplateResponse> GetComposableTemplateAsync(
            IGetComposableIndexTemplateRequest request,
            CancellationToken ct = default
        ) =>
            DoRequestAsync<IGetComposableIndexTemplateRequest, GetComposableIndexTemplateResponse>(
                request,
                request.RequestParameters,
                ct
            );

        /// <summary>
        /// <c>PUT</c> request to the <c>indices.put_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        public PutComposableIndexTemplateResponse PutComposableTemplate(
            Name name,
            Func<PutComposableIndexTemplateDescriptor, IPutComposableIndexTemplateRequest> selector
        ) =>
            PutComposableTemplate(
                selector.InvokeOrDefault(new PutComposableIndexTemplateDescriptor(name: name))
            );

        /// <summary>
        /// <c>PUT</c> request to the <c>indices.put_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        public Task<PutComposableIndexTemplateResponse> PutComposableTemplateAsync(
            Name name,
            Func<PutComposableIndexTemplateDescriptor, IPutComposableIndexTemplateRequest> selector,
            CancellationToken ct = default
        ) =>
            PutComposableTemplateAsync(
                selector.InvokeOrDefault(new PutComposableIndexTemplateDescriptor(name: name)),
                ct
            );

        /// <summary>
        /// <c>PUT</c> request to the <c>indices.put_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        public PutComposableIndexTemplateResponse PutComposableTemplate(
            IPutComposableIndexTemplateRequest request
        ) =>
            DoRequest<IPutComposableIndexTemplateRequest, PutComposableIndexTemplateResponse>(
                request,
                request.RequestParameters
            );

        /// <summary>
        /// <c>PUT</c> request to the <c>indices.put_index_template</c> API, read more about this API online:
        /// <para></para>
        /// <a href="https://opensearch.org/docs/latest/im-plugin/index-templates/">https://opensearch.org/docs/latest/im-plugin/index-templates/</a>
        /// </summary>
        public Task<PutComposableIndexTemplateResponse> PutComposableTemplateAsync(
            IPutComposableIndexTemplateRequest request,
            CancellationToken ct = default
        ) =>
            DoRequestAsync<IPutComposableIndexTemplateRequest, PutComposableIndexTemplateResponse>(
                request,
                request.RequestParameters,
                ct
            );
    }
}
