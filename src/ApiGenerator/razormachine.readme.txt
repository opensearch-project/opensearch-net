Xipton.Razor v2.6.1

The web.config configuration file only is for activating Razor intellisense inside Razor templates, within non MVC projects. Note that for being able to use Razor intellisense MVC 3 or MVC 4 need to be installed on your system. MVC is not needed for compiling Xipton.Razor templates.
  
You need to the web.config to your non MVC template project besides your default app.config. The configured MVC and Razor assemblies (here MVC version 3) need to be installed at your environment. Xipton.Razor uses Razor 2.0 (part of MVC 4), still you can use this configuration (MVC 3, Razor 1) as long as MVC 3 has been installed at your system as well. If you do not have MVC 3 installed on your system you need to configure the MVC version (and configuration) in accordance to the version that is on your system.
  
Important: 
If you reference Xipton.Razor as a dll (and not as a project) and you want to use intellisense you must install the signed Xipton.Razor.dll inside the GAC (this is required only for being able to use intellisense, not for deployment).In that case the @model directive does not work together with intellisense (the template will compile though). Therefore if referencing Xipton.Razor as a signed dll (that must have been installed inside the GAC) you need to use the @inherits directive for a working intellisense like "@inherits Xipton.Razor.TemplateBase<MyModel>".
   
Within MVC projects:
If you work with Xipton.Razor together with MVC, then you use your MVC project's app.config. In that case you could install the Xipton.Razor.dll in the GAC as well. Inside the MVC app.config you add an assembly reference for the Xipton.Razor.dll like:
<system.web>
  <compilation targetFramework="4.0">
    <assemblies>
      <add assembly="Xipton.Razor, Version=2.6.1.0, Culture=neutral, PublicKeyToken=563e02c711ac8b7e" />
    </assemblies>
  </compilation>
</system.web>
Now inside your Xipton.Razor templates you need to use the directive @inherits, like "@inherits Xipton.Razor.TemplateBase<MyModel>", instead of the @model directive.

