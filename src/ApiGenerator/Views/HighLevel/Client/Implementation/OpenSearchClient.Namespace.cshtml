@using ApiGenerator
@using System.Collections.Generic
@using System.Collections.ObjectModel
@using ApiGenerator.Domain.Code
@using ApiGenerator.Domain.Specification
@inherits ApiGenerator.CodeTemplatePage<KeyValuePair<string, ReadOnlyCollection<ApiEndpoint>>>
@{
	var (ns, endpoints) = Model;
}
@{ await IncludeLegacyGeneratorNotice(); }
// ReSharper disable RedundantUsingDirective
using System;
using System.Threading;
using System.Threading.Tasks;
using OpenSearch.Net.@(CsharpNames.ApiNamespace).@ns@(CsharpNames.ApiNamespaceSuffix);

// ReSharper disable once CheckNamespace
// ReSharper disable RedundantTypeArgumentsOfMethod
namespace OpenSearch.Client.@(CsharpNames.ApiNamespace).@ns@(CsharpNames.ApiNamespaceSuffix)
{
    /// <summary>
    /// @ns.SplitPascalCase() APIs.
    /// <para>Use the <see cref="IOpenSearchClient.@ns"/> property on <see cref="IOpenSearchClient"/>.</para>
    /// </summary>
    public partial interface I@(CsharpNames.HighLevelClientNamespacePrefix)@(ns)@(CsharpNames.ClientNamespaceSuffix)
    {
        @foreach(var e in endpoints)
        {
            await IncludeAsync("HighLevel/Client/Implementation/MethodInterface.cshtml", e.HighLevelModel);
        }
    }

    /// <summary>
    /// @ns.SplitPascalCase() implementation.
    /// <para>Not intended to be instantiated directly. Use the <see cref="IOpenSearchClient.@ns"/> property
    /// on <see cref="IOpenSearchClient"/>.
    /// </para>
    /// </summary>
    public partial class @(CsharpNames.HighLevelClientNamespacePrefix)@ns@(CsharpNames.ClientNamespaceSuffix) : NamespacedClientProxy, I@(CsharpNames.HighLevelClientNamespacePrefix)@(ns)@(CsharpNames.ClientNamespaceSuffix)
    {
        internal @(CsharpNames.HighLevelClientNamespacePrefix)@ns@(CsharpNames.ClientNamespaceSuffix)(OpenSearchClient client) : base(client) {}
        @foreach(var e in endpoints)
        {
            await IncludeAsync("HighLevel/Client/Implementation/MethodImplementation.cshtml", e.HighLevelModel);
        }
    }
}
