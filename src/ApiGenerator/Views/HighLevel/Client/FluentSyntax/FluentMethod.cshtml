@using ApiGenerator.Domain.Code.HighLevel.Methods
@inherits ApiGenerator.CodeTemplatePage<FluentSyntaxView>
@{
	var syntax = Model.Syntax;
	
	var method = !Model.Async ? syntax.MethodName : $"{syntax.MethodName}Async";
	var asyncKeyword = Model.Syntax.InterfaceResponse && Model.Async ? "async " : string.Empty;
	var awaitKeyWord = Model.Syntax.InterfaceResponse && Model.Async ? "await ": string.Empty;
	var configureAwait = Model.Syntax.InterfaceResponse && Model.Async ? ".ConfigureAwait(false)" : string.Empty;
	var cancellationToken = !Model.Async ? string.Empty : ", ct";
}
@{ await IncludeAsync("HighLevel/Client/MethodXmlDocs.cshtml", syntax); }
public @(asyncKeyword)@{ await IncludeAsync("HighLevel/Client/FluentSyntax/FluentMethodHeader.cshtml", Model);} @Raw("=>")
	@(awaitKeyWord)@(method)@(Raw(syntax.RequestMethodGenerics))(selector.InvokeOrDefault(new @(Raw(syntax.DescriptorName))(@Raw(syntax.SelectorArguments()))@syntax.SelectorChainedDefaults())@cancellationToken)@Raw(configureAwait);
