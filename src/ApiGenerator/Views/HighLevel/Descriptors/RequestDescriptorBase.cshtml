@using ApiGenerator.Domain
@inherits ApiGenerator.CodeTemplatePage<RestApiSpec>
using System.Collections.Generic;

namespace OpenSearch.Client
{
	// ReSharper disable UnusedTypeParameter
	public abstract partial class @Raw("RequestDescriptorBase<TDescriptor, TParameters, TInterface>")
	{
@foreach (var common in RestApiSpec.CommonApiQueryParameters.Values)
{
	var original = common.QueryStringKey;
	var t = @common.TypeHighLevel;
	var tSuffix = (t == "bool" || t == "bool?") ? " = true" : "";
<text>		///<summary>@(Raw(string.Join("", common.DescriptionHighLevel)))</summary>
		public TDescriptor @(common.ClsName)(@common.DescriptorArgumentType @common.ClsArgumentName@tSuffix) => Qs("@original", @(common.ClsArgumentName));
</text>
	if (common.IsArray)
	{
<text>		///<summary>@(Raw(string.Join("", common.DescriptionHighLevel)))</summary>
		public TDescriptor @(common.ClsName)(@Raw(common.DescriptorEnumerableArgumentType) @common.ClsArgumentName@tSuffix) => Qs("@original", @(common.ClsArgumentName));
</text>
	}
}
	}
}
