/* SPDX-License-Identifier: Apache-2.0
*
* The OpenSearch Contributors require contributions made to
* this file be licensed under the Apache-2.0 license or a
* compatible open source license.
*/
/*
* Modifications Copyright OpenSearch Contributors. See
* GitHub history for details.
*
*  Licensed to Elasticsearch B.V. under one or more contributor
*  license agreements. See the NOTICE file distributed with
*  this work for additional information regarding copyright
*  ownership. Elasticsearch B.V. licenses this file to you under
*  the Apache License, Version 2.0 (the "License"); you may
*  not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing,
*  software distributed under the License is distributed on an
*  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
*  KIND, either express or implied.  See the License for the
*  specific language governing permissions and limitations
*  under the License.
*/
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//
// This file is automatically generated
// Please do not edit these files manually
// Run the following in the root of the repos:
//
//      *NIX        :   ./build.sh codegen
//      Windows     :   build.bat codegen
//
// -----------------------------------------------
// ReSharper disable RedundantUsingDirective
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using OpenSearch.Net;
using static OpenSearch.Net.HttpMethod;

// ReSharper disable InterpolatedStringExpressionIsNotIFormattable
// ReSharper disable once CheckNamespace
// ReSharper disable InterpolatedStringExpressionIsNotIFormattable
// ReSharper disable RedundantExtendsListEntry
namespace OpenSearch.Net.Specification.ReplicationApi
{
    /// <summary>
    /// Replication APIs.
    /// <para>Not intended to be instantiated directly. Use the <see cref="IOpenSearchLowLevelClient.Replication"/> property
    /// on <see cref="IOpenSearchLowLevelClient"/>.
    /// </para>
    /// </summary>
    public partial class LowLevelReplicationNamespace : NamespacedClientProxy
    {
        internal LowLevelReplicationNamespace(OpenSearchLowLevelClient client)
            : base(client) { }

        /// <summary>GET on /_plugins/_replication/autofollow_stats <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#get-auto-follow-stats</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        public TResponse AutofollowStats<TResponse>(
            AutofollowStatsRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                "_plugins/_replication/autofollow_stats",
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_plugins/_replication/autofollow_stats <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#get-auto-follow-stats</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        [MapsApi("replication.autofollow_stats", "")]
        public Task<TResponse> AutofollowStatsAsync<TResponse>(
            AutofollowStatsRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_plugins/_replication/autofollow_stats",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>POST on /_plugins/_replication/_autofollow <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#create-replication-rule</para></summary>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        public TResponse CreateRule<TResponse>(
            PostData body,
            CreateReplicationRuleRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                POST,
                "_plugins/_replication/_autofollow",
                body,
                RequestParams(requestParameters)
            );

        /// <summary>POST on /_plugins/_replication/_autofollow <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#create-replication-rule</para></summary>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        [MapsApi("replication.create_replication_rule", "body")]
        public Task<TResponse> CreateRuleAsync<TResponse>(
            PostData body,
            CreateReplicationRuleRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                POST,
                "_plugins/_replication/_autofollow",
                ctx,
                body,
                RequestParams(requestParameters)
            );

        /// <summary>DELETE on /_plugins/_replication/_autofollow <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#delete-replication-rule</para></summary>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        public TResponse DeleteRule<TResponse>(
            PostData body,
            DeleteReplicationRuleRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                DELETE,
                "_plugins/_replication/_autofollow",
                body,
                RequestParams(requestParameters)
            );

        /// <summary>DELETE on /_plugins/_replication/_autofollow <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#delete-replication-rule</para></summary>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        [MapsApi("replication.delete_replication_rule", "body")]
        public Task<TResponse> DeleteRuleAsync<TResponse>(
            PostData body,
            DeleteReplicationRuleRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                DELETE,
                "_plugins/_replication/_autofollow",
                ctx,
                body,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_plugins/_replication/follower_stats <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#get-follower-cluster-stats</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        public TResponse FollowerStats<TResponse>(
            FollowerStatsRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                "_plugins/_replication/follower_stats",
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_plugins/_replication/follower_stats <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#get-follower-cluster-stats</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        [MapsApi("replication.follower_stats", "")]
        public Task<TResponse> FollowerStatsAsync<TResponse>(
            FollowerStatsRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_plugins/_replication/follower_stats",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_plugins/_replication/leader_stats <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#get-leader-cluster-stats</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        public TResponse LeaderStats<TResponse>(
            LeaderStatsRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                "_plugins/_replication/leader_stats",
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_plugins/_replication/leader_stats <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#get-leader-cluster-stats</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        [MapsApi("replication.leader_stats", "")]
        public Task<TResponse> LeaderStatsAsync<TResponse>(
            LeaderStatsRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_plugins/_replication/leader_stats",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>POST on /_plugins/_replication/{index}/_pause <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#pause-replication</para></summary>
        /// <param name="index">The name of the data stream, index, or index alias to perform bulk actions on.</param>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        public TResponse Pause<TResponse>(
            string index,
            PostData body,
            PauseRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                POST,
                Url($"_plugins/_replication/{index:index}/_pause"),
                body,
                RequestParams(requestParameters)
            );

        /// <summary>POST on /_plugins/_replication/{index}/_pause <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#pause-replication</para></summary>
        /// <param name="index">The name of the data stream, index, or index alias to perform bulk actions on.</param>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        [MapsApi("replication.pause", "index, body")]
        public Task<TResponse> PauseAsync<TResponse>(
            string index,
            PostData body,
            PauseRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                POST,
                Url($"_plugins/_replication/{index:index}/_pause"),
                ctx,
                body,
                RequestParams(requestParameters)
            );

        /// <summary>POST on /_plugins/_replication/{index}/_resume <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#resume-replication</para></summary>
        /// <param name="index">The name of the data stream, index, or index alias to perform bulk actions on.</param>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        public TResponse Resume<TResponse>(
            string index,
            PostData body,
            ResumeRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                POST,
                Url($"_plugins/_replication/{index:index}/_resume"),
                body,
                RequestParams(requestParameters)
            );

        /// <summary>POST on /_plugins/_replication/{index}/_resume <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#resume-replication</para></summary>
        /// <param name="index">The name of the data stream, index, or index alias to perform bulk actions on.</param>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        [MapsApi("replication.resume", "index, body")]
        public Task<TResponse> ResumeAsync<TResponse>(
            string index,
            PostData body,
            ResumeRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                POST,
                Url($"_plugins/_replication/{index:index}/_resume"),
                ctx,
                body,
                RequestParams(requestParameters)
            );

        /// <summary>PUT on /_plugins/_replication/{index}/_start <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#start-replication</para></summary>
        /// <param name="index">The name of the data stream, index, or index alias to perform bulk actions on.</param>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        public TResponse Start<TResponse>(
            string index,
            PostData body,
            StartRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                PUT,
                Url($"_plugins/_replication/{index:index}/_start"),
                body,
                RequestParams(requestParameters)
            );

        /// <summary>PUT on /_plugins/_replication/{index}/_start <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#start-replication</para></summary>
        /// <param name="index">The name of the data stream, index, or index alias to perform bulk actions on.</param>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        [MapsApi("replication.start", "index, body")]
        public Task<TResponse> StartAsync<TResponse>(
            string index,
            PostData body,
            StartRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                PUT,
                Url($"_plugins/_replication/{index:index}/_start"),
                ctx,
                body,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_plugins/_replication/{index}/_status <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#get-replication-status</para></summary>
        /// <param name="index">The name of the data stream, index, or index alias to perform bulk actions on.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        public TResponse Status<TResponse>(
            string index,
            StatusRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                Url($"_plugins/_replication/{index:index}/_status"),
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_plugins/_replication/{index}/_status <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#get-replication-status</para></summary>
        /// <param name="index">The name of the data stream, index, or index alias to perform bulk actions on.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        [MapsApi("replication.status", "index")]
        public Task<TResponse> StatusAsync<TResponse>(
            string index,
            StatusRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                Url($"_plugins/_replication/{index:index}/_status"),
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>POST on /_plugins/_replication/{index}/_stop <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#stop-replication</para></summary>
        /// <param name="index">The name of the data stream, index, or index alias to perform bulk actions on.</param>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        public TResponse Stop<TResponse>(
            string index,
            PostData body,
            StopRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                POST,
                Url($"_plugins/_replication/{index:index}/_stop"),
                body,
                RequestParams(requestParameters)
            );

        /// <summary>POST on /_plugins/_replication/{index}/_stop <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#stop-replication</para></summary>
        /// <param name="index">The name of the data stream, index, or index alias to perform bulk actions on.</param>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        [MapsApi("replication.stop", "index, body")]
        public Task<TResponse> StopAsync<TResponse>(
            string index,
            PostData body,
            StopRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                POST,
                Url($"_plugins/_replication/{index:index}/_stop"),
                ctx,
                body,
                RequestParams(requestParameters)
            );

        /// <summary>PUT on /_plugins/_replication/{index}/_update <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#update-settings</para></summary>
        /// <param name="index">The name of the data stream, index, or index alias to perform bulk actions on.</param>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        public TResponse UpdateSettings<TResponse>(
            string index,
            PostData body,
            UpdateSettingsRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                PUT,
                Url($"_plugins/_replication/{index:index}/_update"),
                body,
                RequestParams(requestParameters)
            );

        /// <summary>PUT on /_plugins/_replication/{index}/_update <para>https://opensearch.org/docs/latest/tuning-your-cluster/replication-plugin/api/#update-settings</para></summary>
        /// <param name="index">The name of the data stream, index, or index alias to perform bulk actions on.</param>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 1.1.0 or greater.</remarks>
        [MapsApi("replication.update_settings", "index, body")]
        public Task<TResponse> UpdateSettingsAsync<TResponse>(
            string index,
            PostData body,
            UpdateSettingsRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                PUT,
                Url($"_plugins/_replication/{index:index}/_update"),
                ctx,
                body,
                RequestParams(requestParameters)
            );
    }
}
