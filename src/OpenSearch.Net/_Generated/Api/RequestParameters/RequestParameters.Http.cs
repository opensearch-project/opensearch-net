/* SPDX-License-Identifier: Apache-2.0
*
* The OpenSearch Contributors require contributions made to
* this file be licensed under the Apache-2.0 license or a
* compatible open source license.
*/
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//
// This file is automatically generated
// Please do not edit these files manually
// Run the following in the root of the repos:
//
//      *NIX        :   ./build.sh codegen
//      Windows     :   build.bat codegen
//
// -----------------------------------------------

using OpenSearch.Net;

namespace OpenSearch.Net.Specification.HttpApi;

public abstract class ArbitraryHttpRequestParameters<TSelf> : RequestParameters<TSelf>
    where TSelf : ArbitraryHttpRequestParameters<TSelf>
{
    protected ArbitraryHttpRequestParameters(HttpMethod method, bool supportsBody)
    {
        DefaultHttpMethod = method;
        SupportsBody = supportsBody;
    }

    public override HttpMethod DefaultHttpMethod
    {
        get;
    }
    public override bool SupportsBody
    {
        get;
    }
}



public class HttpDeleteRequestParameters : ArbitraryHttpRequestParameters<HttpDeleteRequestParameters>
{
    public HttpDeleteRequestParameters() : base(HttpMethod.DELETE, false) { }
}



public class HttpGetRequestParameters : ArbitraryHttpRequestParameters<HttpGetRequestParameters>
{
    public HttpGetRequestParameters() : base(HttpMethod.GET, false) { }
}



public class HttpHeadRequestParameters : ArbitraryHttpRequestParameters<HttpHeadRequestParameters>
{
    public HttpHeadRequestParameters() : base(HttpMethod.HEAD, false) { }
}



public class HttpPatchRequestParameters : ArbitraryHttpRequestParameters<HttpPatchRequestParameters>
{
    public HttpPatchRequestParameters() : base(HttpMethod.PATCH, true) { }
}



public class HttpPostRequestParameters : ArbitraryHttpRequestParameters<HttpPostRequestParameters>
{
    public HttpPostRequestParameters() : base(HttpMethod.POST, true) { }
}



public class HttpPutRequestParameters : ArbitraryHttpRequestParameters<HttpPutRequestParameters>
{
    public HttpPutRequestParameters() : base(HttpMethod.PUT, true) { }
}

