/* SPDX-License-Identifier: Apache-2.0
*
* The OpenSearch Contributors require contributions made to
* this file be licensed under the Apache-2.0 license or a
* compatible open source license.
*/
/*
* Modifications Copyright OpenSearch Contributors. See
* GitHub history for details.
*
*  Licensed to Elasticsearch B.V. under one or more contributor
*  license agreements. See the NOTICE file distributed with
*  this work for additional information regarding copyright
*  ownership. Elasticsearch B.V. licenses this file to you under
*  the Apache License, Version 2.0 (the "License"); you may
*  not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing,
*  software distributed under the License is distributed on an
*  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
*  KIND, either express or implied.  See the License for the
*  specific language governing permissions and limitations
*  under the License.
*/
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//
// This file is automatically generated
// Please do not edit these files manually
// Run the following in the root of the repos:
//
//      *NIX        :   ./build.sh codegen
//      Windows     :   build.bat codegen
//
// -----------------------------------------------

// ReSharper disable RedundantUsingDirective
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;

// ReSharper disable once CheckNamespace
namespace OpenSearch.Net.Specification.AsynchronousSearchApi
{
    /// <summary>Request options for Delete <para>https://opensearch.org/docs/latest/search-plugins/async/index/#delete-searches-and-results</para></summary>
    public partial class DeleteRequestParameters : RequestParameters<DeleteRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for Get <para>https://opensearch.org/docs/latest/search-plugins/async/index/#get-partial-results</para></summary>
    public partial class GetRequestParameters : RequestParameters<GetRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for Search <para>https://opensearch.org/docs/latest/search-plugins/async/index/#rest-api</para></summary>
    public partial class SearchRequestParameters : RequestParameters<SearchRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
        public override bool SupportsBody => true;

        /// <summary>
        /// The name of the index to be searched. Can be an individual name, a comma-separated list of indexes, or a wildcard expression of index
        /// names.
        /// </summary>
        public string Index
        {
            get => Q<string>("index");
            set => Q("index", value);
        }

        /// <summary>
        /// The amount of time that the result is saved in the cluster. For example, `2d` means that the results are stored in the cluster for 48
        /// hours. The saved search results are deleted after this period or if the search is canceled. Note that this includes the query execution
        /// time. If the query exceeds this amount of time, the process cancels this query automatically.
        /// </summary>
        public string KeepAlive
        {
            get => Q<string>("keep_alive");
            set => Q("keep_alive", value);
        }

        /// <summary>Whether to save the results in the cluster after the search is complete. You can examine the stored results at a later time.</summary>
        public bool? KeepOnCompletion
        {
            get => Q<bool?>("keep_on_completion");
            set => Q("keep_on_completion", value);
        }

        /// <summary>
        /// The amount of time to wait for the results. You can poll the remaining results based on an ID. The maximum value is 300 seconds. Default
        /// is `1s`.
        /// </summary>
        public string WaitForCompletionTimeout
        {
            get => Q<string>("wait_for_completion_timeout");
            set => Q("wait_for_completion_timeout", value);
        }
    }

    /// <summary>Request options for Stats <para>https://opensearch.org/docs/latest/search-plugins/async/index/#monitor-stats</para></summary>
    public partial class StatsRequestParameters : RequestParameters<StatsRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
        public override bool SupportsBody => false;
    }
}
