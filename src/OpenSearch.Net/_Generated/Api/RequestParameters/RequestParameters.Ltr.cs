/* SPDX-License-Identifier: Apache-2.0
*
* The OpenSearch Contributors require contributions made to
* this file be licensed under the Apache-2.0 license or a
* compatible open source license.
*/
/*
* Modifications Copyright OpenSearch Contributors. See
* GitHub history for details.
*
*  Licensed to Elasticsearch B.V. under one or more contributor
*  license agreements. See the NOTICE file distributed with
*  this work for additional information regarding copyright
*  ownership. Elasticsearch B.V. licenses this file to you under
*  the Apache License, Version 2.0 (the "License"); you may
*  not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing,
*  software distributed under the License is distributed on an
*  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
*  KIND, either express or implied.  See the License for the
*  specific language governing permissions and limitations
*  under the License.
*/
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//
// This file is automatically generated
// Please do not edit these files manually
// Run the following in the root of the repos:
//
//      *NIX        :   ./build.sh codegen
//      Windows     :   build.bat codegen
//
// -----------------------------------------------

// ReSharper disable RedundantUsingDirective
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;

// ReSharper disable once CheckNamespace
namespace OpenSearch.Net.Specification.LtrApi
{
    /// <summary>Request options for AddFeaturesToSet</summary>
    public partial class AddFeaturesToSetRequestParameters
        : RequestParameters<AddFeaturesToSetRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
        public override bool SupportsBody => true;

        /// <summary>Whether to merge the feature list or append only.</summary>
        public bool? Merge
        {
            get => Q<bool?>("merge");
            set => Q("merge", value);
        }

        /// <summary>Specific routing value.</summary>
        public string Routing
        {
            get => Q<string>("routing");
            set => Q("routing", value);
        }

        /// <summary>Version check to ensure feature set is modified with expected version.</summary>
        public int? Version
        {
            get => Q<int?>("version");
            set => Q("version", value);
        }
    }

    /// <summary>Request options for AddFeaturesToSetByQuery</summary>
    public partial class AddFeaturesToSetByQueryRequestParameters
        : RequestParameters<AddFeaturesToSetByQueryRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
        public override bool SupportsBody => false;

        /// <summary>Whether to merge the feature list or append only.</summary>
        public bool? Merge
        {
            get => Q<bool?>("merge");
            set => Q("merge", value);
        }

        /// <summary>Specific routing value.</summary>
        public string Routing
        {
            get => Q<string>("routing");
            set => Q("routing", value);
        }

        /// <summary>Version check to ensure feature set is modified with expected version.</summary>
        public int? Version
        {
            get => Q<int?>("version");
            set => Q("version", value);
        }
    }

    /// <summary>Request options for CacheStats</summary>
    public partial class CacheStatsRequestParameters
        : RequestParameters<CacheStatsRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for ClearCache</summary>
    public partial class ClearCacheRequestParameters
        : RequestParameters<ClearCacheRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for CreateDefaultStore</summary>
    public partial class CreateDefaultStoreRequestParameters
        : RequestParameters<CreateDefaultStoreRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for CreateFeature</summary>
    public partial class CreateFeatureRequestParameters
        : RequestParameters<CreateFeatureRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
        public override bool SupportsBody => true;

        /// <summary>Specific routing value.</summary>
        public string Routing
        {
            get => Q<string>("routing");
            set => Q("routing", value);
        }
    }

    /// <summary>Request options for CreateFeatureset</summary>
    public partial class CreateFeaturesetRequestParameters
        : RequestParameters<CreateFeaturesetRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
        public override bool SupportsBody => true;

        /// <summary>Specific routing value.</summary>
        public string Routing
        {
            get => Q<string>("routing");
            set => Q("routing", value);
        }
    }

    /// <summary>Request options for CreateModel</summary>
    public partial class CreateModelRequestParameters
        : RequestParameters<CreateModelRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
        public override bool SupportsBody => true;

        /// <summary>Specific routing value.</summary>
        public string Routing
        {
            get => Q<string>("routing");
            set => Q("routing", value);
        }
    }

    /// <summary>Request options for CreateModelFromSet</summary>
    public partial class CreateModelFromSetRequestParameters
        : RequestParameters<CreateModelFromSetRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
        public override bool SupportsBody => true;

        /// <summary>Specific routing value.</summary>
        public string Routing
        {
            get => Q<string>("routing");
            set => Q("routing", value);
        }
    }

    /// <summary>Request options for CreateStore</summary>
    public partial class CreateStoreRequestParameters
        : RequestParameters<CreateStoreRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for DeleteDefaultStore</summary>
    public partial class DeleteDefaultStoreRequestParameters
        : RequestParameters<DeleteDefaultStoreRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for DeleteFeature</summary>
    public partial class DeleteFeatureRequestParameters
        : RequestParameters<DeleteFeatureRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for DeleteFeatureset</summary>
    public partial class DeleteFeaturesetRequestParameters
        : RequestParameters<DeleteFeaturesetRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for DeleteModel</summary>
    public partial class DeleteModelRequestParameters
        : RequestParameters<DeleteModelRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for DeleteStore</summary>
    public partial class DeleteStoreRequestParameters
        : RequestParameters<DeleteStoreRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for GetFeature</summary>
    public partial class GetFeatureRequestParameters
        : RequestParameters<GetFeatureRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for GetFeatureset</summary>
    public partial class GetFeaturesetRequestParameters
        : RequestParameters<GetFeaturesetRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for GetModel</summary>
    public partial class GetModelRequestParameters : RequestParameters<GetModelRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for GetStore</summary>
    public partial class GetStoreRequestParameters : RequestParameters<GetStoreRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for ListStores</summary>
    public partial class ListStoresRequestParameters
        : RequestParameters<ListStoresRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
        public override bool SupportsBody => false;
    }

    /// <summary>Request options for SearchFeatures</summary>
    public partial class SearchFeaturesRequestParameters
        : RequestParameters<SearchFeaturesRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
        public override bool SupportsBody => false;

        /// <summary>The offset from the first result (for pagination).</summary>
        public int? From
        {
            get => Q<int?>("from");
            set => Q("from", value);
        }

        /// <summary>A name prefix to filter features by.</summary>
        public string Prefix
        {
            get => Q<string>("prefix");
            set => Q("prefix", value);
        }

        /// <summary>The number of features to return.</summary>
        public int? Size
        {
            get => Q<int?>("size");
            set => Q("size", value);
        }
    }

    /// <summary>Request options for SearchFeaturesets</summary>
    public partial class SearchFeaturesetsRequestParameters
        : RequestParameters<SearchFeaturesetsRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
        public override bool SupportsBody => false;

        /// <summary>The offset from the first result (for pagination).</summary>
        public int? From
        {
            get => Q<int?>("from");
            set => Q("from", value);
        }

        /// <summary>A name prefix to filter feature sets by.</summary>
        public string Prefix
        {
            get => Q<string>("prefix");
            set => Q("prefix", value);
        }

        /// <summary>The number of feature sets to return.</summary>
        public int? Size
        {
            get => Q<int?>("size");
            set => Q("size", value);
        }
    }

    /// <summary>Request options for SearchModels</summary>
    public partial class SearchModelsRequestParameters
        : RequestParameters<SearchModelsRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
        public override bool SupportsBody => false;

        /// <summary>The offset from the first result (for pagination).</summary>
        public int? From
        {
            get => Q<int?>("from");
            set => Q("from", value);
        }

        /// <summary>A name prefix to filter models by.</summary>
        public string Prefix
        {
            get => Q<string>("prefix");
            set => Q("prefix", value);
        }

        /// <summary>The number of models to return.</summary>
        public int? Size
        {
            get => Q<int?>("size");
            set => Q("size", value);
        }
    }

    /// <summary>Request options for Stats</summary>
    public partial class StatsRequestParameters : RequestParameters<StatsRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
        public override bool SupportsBody => false;

        /// <summary>The time in milliseconds to wait for a response.</summary>
        public TimeSpan Timeout
        {
            get => Q<TimeSpan>("timeout");
            set => Q("timeout", value);
        }
    }

    /// <summary>Request options for UpdateFeature</summary>
    public partial class UpdateFeatureRequestParameters
        : RequestParameters<UpdateFeatureRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
        public override bool SupportsBody => true;

        /// <summary>Specific routing value.</summary>
        public string Routing
        {
            get => Q<string>("routing");
            set => Q("routing", value);
        }
    }

    /// <summary>Request options for UpdateFeatureset</summary>
    public partial class UpdateFeaturesetRequestParameters
        : RequestParameters<UpdateFeaturesetRequestParameters>
    {
        public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
        public override bool SupportsBody => true;

        /// <summary>Specific routing value.</summary>
        public string Routing
        {
            get => Q<string>("routing");
            set => Q("routing", value);
        }
    }
}
