/* SPDX-License-Identifier: Apache-2.0
*
* The OpenSearch Contributors require contributions made to
* this file be licensed under the Apache-2.0 license or a
* compatible open source license.
*/
/*
* Modifications Copyright OpenSearch Contributors. See
* GitHub history for details.
*
*  Licensed to Elasticsearch B.V. under one or more contributor
*  license agreements. See the NOTICE file distributed with
*  this work for additional information regarding copyright
*  ownership. Elasticsearch B.V. licenses this file to you under
*  the Apache License, Version 2.0 (the "License"); you may
*  not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing,
*  software distributed under the License is distributed on an
*  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
*  KIND, either express or implied.  See the License for the
*  specific language governing permissions and limitations
*  under the License.
*/
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//
// This file is automatically generated
// Please do not edit these files manually
// Run the following in the root of the repos:
//
//      *NIX        :   ./build.sh codegen
//      Windows     :   build.bat codegen
//
// -----------------------------------------------
// ReSharper disable RedundantUsingDirective
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using OpenSearch.Net;
using static OpenSearch.Net.HttpMethod;

// ReSharper disable InterpolatedStringExpressionIsNotIFormattable
// ReSharper disable once CheckNamespace
// ReSharper disable InterpolatedStringExpressionIsNotIFormattable
// ReSharper disable RedundantExtendsListEntry
namespace OpenSearch.Net.Specification.CatApi
{
    /// <summary>
    /// Cat APIs.
    /// <para>Not intended to be instantiated directly. Use the <see cref="IOpenSearchLowLevelClient.Cat"/> property
    /// on <see cref="IOpenSearchLowLevelClient"/>.
    /// </para>
    /// </summary>
    public partial class LowLevelCatNamespace : NamespacedClientProxy
    {
        internal LowLevelCatNamespace(OpenSearchLowLevelClient client)
            : base(client) { }

        protected override string ContentType => "text/plain";

        /// <summary>GET on /_cat/aliases <para>https://opensearch.org/docs/latest/api-reference/cat/cat-aliases/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Aliases<TResponse>(CatAliasesRequestParameters requestParameters = null)
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/aliases", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/aliases <para>https://opensearch.org/docs/latest/api-reference/cat/cat-aliases/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.aliases", "")]
        public Task<TResponse> AliasesAsync<TResponse>(
            CatAliasesRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/aliases",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/aliases/{name} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-aliases/</para></summary>
        /// <param name="name">A comma-separated list of aliases to retrieve. Supports wildcards (`*`). To retrieve all aliases, omit this parameter or use `*` or `_all`.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Aliases<TResponse>(
            string name,
            CatAliasesRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                Url($"_cat/aliases/{name:name}"),
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/aliases/{name} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-aliases/</para></summary>
        /// <param name="name">A comma-separated list of aliases to retrieve. Supports wildcards (`*`). To retrieve all aliases, omit this parameter or use `*` or `_all`.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.aliases", "name")]
        public Task<TResponse> AliasesAsync<TResponse>(
            string name,
            CatAliasesRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                Url($"_cat/aliases/{name:name}"),
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/pit_segments/_all <para>https://opensearch.org/docs/latest/search-plugins/point-in-time-api/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 2.4.0 or greater.</remarks>
        public TResponse AllPitSegments<TResponse>(
            CatAllPitSegmentsRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                "_cat/pit_segments/_all",
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/pit_segments/_all <para>https://opensearch.org/docs/latest/search-plugins/point-in-time-api/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 2.4.0 or greater.</remarks>
        [MapsApi("cat.all_pit_segments", "")]
        public Task<TResponse> AllPitSegmentsAsync<TResponse>(
            CatAllPitSegmentsRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/pit_segments/_all",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/allocation <para>https://opensearch.org/docs/latest/api-reference/cat/cat-allocation/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Allocation<TResponse>(
            CatAllocationRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/allocation", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/allocation <para>https://opensearch.org/docs/latest/api-reference/cat/cat-allocation/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.allocation", "")]
        public Task<TResponse> AllocationAsync<TResponse>(
            CatAllocationRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/allocation",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/allocation/{node_id} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-allocation/</para></summary>
        /// <param name="nodeId">Comma-separated list of node identifiers or names used to limit the returned information.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Allocation<TResponse>(
            string nodeId,
            CatAllocationRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                Url($"_cat/allocation/{nodeId:nodeId}"),
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/allocation/{node_id} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-allocation/</para></summary>
        /// <param name="nodeId">Comma-separated list of node identifiers or names used to limit the returned information.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.allocation", "node_id")]
        public Task<TResponse> AllocationAsync<TResponse>(
            string nodeId,
            CatAllocationRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                Url($"_cat/allocation/{nodeId:nodeId}"),
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/cluster_manager <para>https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 2.0.0 or greater.</remarks>
        public TResponse ClusterManager<TResponse>(
            CatClusterManagerRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                "_cat/cluster_manager",
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/cluster_manager <para>https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 2.0.0 or greater.</remarks>
        [MapsApi("cat.cluster_manager", "")]
        public Task<TResponse> ClusterManagerAsync<TResponse>(
            CatClusterManagerRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/cluster_manager",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/count <para>https://opensearch.org/docs/latest/api-reference/cat/cat-count/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Count<TResponse>(CatCountRequestParameters requestParameters = null)
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/count", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/count <para>https://opensearch.org/docs/latest/api-reference/cat/cat-count/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.count", "")]
        public Task<TResponse> CountAsync<TResponse>(
            CatCountRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/count",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/count/{index} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-count/</para></summary>
        /// <param name="index">Comma-separated list of data streams, indices, and aliases used to limit the request. Supports wildcards (`*`). To target all data streams and indices, omit this parameter or use `*` or `_all`.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Count<TResponse>(
            string index,
            CatCountRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                Url($"_cat/count/{index:index}"),
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/count/{index} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-count/</para></summary>
        /// <param name="index">Comma-separated list of data streams, indices, and aliases used to limit the request. Supports wildcards (`*`). To target all data streams and indices, omit this parameter or use `*` or `_all`.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.count", "index")]
        public Task<TResponse> CountAsync<TResponse>(
            string index,
            CatCountRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                Url($"_cat/count/{index:index}"),
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/fielddata <para>https://opensearch.org/docs/latest/api-reference/cat/cat-field-data/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Fielddata<TResponse>(
            CatFielddataRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/fielddata", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/fielddata <para>https://opensearch.org/docs/latest/api-reference/cat/cat-field-data/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.fielddata", "")]
        public Task<TResponse> FielddataAsync<TResponse>(
            CatFielddataRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/fielddata",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/fielddata/{fields} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-field-data/</para></summary>
        /// <param name="fields">Comma-separated list of fields used to limit returned information. To retrieve all fields, omit this parameter.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Fielddata<TResponse>(
            string fields,
            CatFielddataRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                Url($"_cat/fielddata/{fields:fields}"),
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/fielddata/{fields} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-field-data/</para></summary>
        /// <param name="fields">Comma-separated list of fields used to limit returned information. To retrieve all fields, omit this parameter.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.fielddata", "fields")]
        public Task<TResponse> FielddataAsync<TResponse>(
            string fields,
            CatFielddataRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                Url($"_cat/fielddata/{fields:fields}"),
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/health <para>https://opensearch.org/docs/latest/api-reference/cat/cat-health/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Health<TResponse>(CatHealthRequestParameters requestParameters = null)
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/health", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/health <para>https://opensearch.org/docs/latest/api-reference/cat/cat-health/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.health", "")]
        public Task<TResponse> HealthAsync<TResponse>(
            CatHealthRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/health",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat <para>https://opensearch.org/docs/latest/api-reference/cat/index/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Help<TResponse>(CatHelpRequestParameters requestParameters = null)
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat <para>https://opensearch.org/docs/latest/api-reference/cat/index/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.help", "")]
        public Task<TResponse> HelpAsync<TResponse>(
            CatHelpRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(GET, "_cat", ctx, null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/indices <para>https://opensearch.org/docs/latest/api-reference/cat/cat-indices/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Indices<TResponse>(CatIndicesRequestParameters requestParameters = null)
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/indices", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/indices <para>https://opensearch.org/docs/latest/api-reference/cat/cat-indices/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.indices", "")]
        public Task<TResponse> IndicesAsync<TResponse>(
            CatIndicesRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/indices",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/indices/{index} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-indices/</para></summary>
        /// <param name="index">Comma-separated list of data streams, indices, and aliases used to limit the request. Supports wildcards (`*`). To target all data streams and indices, omit this parameter or use `*` or `_all`.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Indices<TResponse>(
            string index,
            CatIndicesRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                Url($"_cat/indices/{index:index}"),
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/indices/{index} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-indices/</para></summary>
        /// <param name="index">Comma-separated list of data streams, indices, and aliases used to limit the request. Supports wildcards (`*`). To target all data streams and indices, omit this parameter or use `*` or `_all`.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.indices", "index")]
        public Task<TResponse> IndicesAsync<TResponse>(
            string index,
            CatIndicesRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                Url($"_cat/indices/{index:index}"),
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/master <para>https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [Obsolete(
            "Deprecated in version 2.0: To promote inclusive language, please use '/_cat/cluster_manager' instead."
        )]
        public TResponse Master<TResponse>(CatMasterRequestParameters requestParameters = null)
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/master", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/master <para>https://opensearch.org/docs/latest/api-reference/cat/cat-cluster_manager/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [Obsolete(
            "Deprecated in version 2.0: To promote inclusive language, please use '/_cat/cluster_manager' instead."
        )]
        [MapsApi("cat.master", "")]
        public Task<TResponse> MasterAsync<TResponse>(
            CatMasterRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/master",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/nodeattrs <para>https://opensearch.org/docs/latest/api-reference/cat/cat-nodeattrs/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse NodeAttributes<TResponse>(
            CatNodeAttributesRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/nodeattrs", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/nodeattrs <para>https://opensearch.org/docs/latest/api-reference/cat/cat-nodeattrs/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.nodeattrs", "")]
        public Task<TResponse> NodeAttributesAsync<TResponse>(
            CatNodeAttributesRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/nodeattrs",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/nodes <para>https://opensearch.org/docs/latest/api-reference/cat/cat-nodes/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Nodes<TResponse>(CatNodesRequestParameters requestParameters = null)
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/nodes", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/nodes <para>https://opensearch.org/docs/latest/api-reference/cat/cat-nodes/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.nodes", "")]
        public Task<TResponse> NodesAsync<TResponse>(
            CatNodesRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/nodes",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/pending_tasks <para>https://opensearch.org/docs/latest/api-reference/cat/cat-pending-tasks/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse PendingTasks<TResponse>(
            CatPendingTasksRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/pending_tasks", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/pending_tasks <para>https://opensearch.org/docs/latest/api-reference/cat/cat-pending-tasks/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.pending_tasks", "")]
        public Task<TResponse> PendingTasksAsync<TResponse>(
            CatPendingTasksRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/pending_tasks",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/pit_segments <para>https://opensearch.org/docs/latest/search-plugins/point-in-time-api/</para></summary>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 2.4.0 or greater.</remarks>
        public TResponse PitSegments<TResponse>(
            PostData body,
            CatPitSegmentsRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/pit_segments", body, RequestParams(requestParameters));

        /// <summary>GET on /_cat/pit_segments <para>https://opensearch.org/docs/latest/search-plugins/point-in-time-api/</para></summary>
        /// <param name="body"></param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 2.4.0 or greater.</remarks>
        [MapsApi("cat.pit_segments", "body")]
        public Task<TResponse> PitSegmentsAsync<TResponse>(
            PostData body,
            CatPitSegmentsRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/pit_segments",
                ctx,
                body,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/plugins <para>https://opensearch.org/docs/latest/api-reference/cat/cat-plugins/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Plugins<TResponse>(CatPluginsRequestParameters requestParameters = null)
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/plugins", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/plugins <para>https://opensearch.org/docs/latest/api-reference/cat/cat-plugins/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.plugins", "")]
        public Task<TResponse> PluginsAsync<TResponse>(
            CatPluginsRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/plugins",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/recovery <para>https://opensearch.org/docs/latest/api-reference/cat/cat-plugins/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Recovery<TResponse>(CatRecoveryRequestParameters requestParameters = null)
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/recovery", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/recovery <para>https://opensearch.org/docs/latest/api-reference/cat/cat-plugins/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.recovery", "")]
        public Task<TResponse> RecoveryAsync<TResponse>(
            CatRecoveryRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/recovery",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/recovery/{index} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-plugins/</para></summary>
        /// <param name="index">A comma-separated list of data streams, indices, and aliases used to limit the request. Supports wildcards (`*`). To target all data streams and indices, omit this parameter or use `*` or `_all`.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Recovery<TResponse>(
            string index,
            CatRecoveryRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                Url($"_cat/recovery/{index:index}"),
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/recovery/{index} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-plugins/</para></summary>
        /// <param name="index">A comma-separated list of data streams, indices, and aliases used to limit the request. Supports wildcards (`*`). To target all data streams and indices, omit this parameter or use `*` or `_all`.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.recovery", "index")]
        public Task<TResponse> RecoveryAsync<TResponse>(
            string index,
            CatRecoveryRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                Url($"_cat/recovery/{index:index}"),
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/repositories <para>https://opensearch.org/docs/latest/api-reference/cat/cat-repositories/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Repositories<TResponse>(
            CatRepositoriesRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/repositories", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/repositories <para>https://opensearch.org/docs/latest/api-reference/cat/cat-repositories/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.repositories", "")]
        public Task<TResponse> RepositoriesAsync<TResponse>(
            CatRepositoriesRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/repositories",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/segment_replication <para>https://opensearch.org/docs/latest/api-reference/cat/cat-segment-replication/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 2.6.0 or greater.</remarks>
        public TResponse SegmentReplication<TResponse>(
            CatSegmentReplicationRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                "_cat/segment_replication",
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/segment_replication <para>https://opensearch.org/docs/latest/api-reference/cat/cat-segment-replication/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 2.6.0 or greater.</remarks>
        [MapsApi("cat.segment_replication", "")]
        public Task<TResponse> SegmentReplicationAsync<TResponse>(
            CatSegmentReplicationRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/segment_replication",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/segment_replication/{index} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-segment-replication/</para></summary>
        /// <param name="index">Comma-separated list or wildcard expression of index names to limit the returned information.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 2.6.0 or greater.</remarks>
        public TResponse SegmentReplication<TResponse>(
            string index,
            CatSegmentReplicationRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                Url($"_cat/segment_replication/{index:index}"),
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/segment_replication/{index} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-segment-replication/</para></summary>
        /// <param name="index">Comma-separated list or wildcard expression of index names to limit the returned information.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        /// <remarks>Supported by OpenSearch servers of version 2.6.0 or greater.</remarks>
        [MapsApi("cat.segment_replication", "index")]
        public Task<TResponse> SegmentReplicationAsync<TResponse>(
            string index,
            CatSegmentReplicationRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                Url($"_cat/segment_replication/{index:index}"),
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/segments <para>https://opensearch.org/docs/latest/api-reference/cat/cat-segments/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Segments<TResponse>(CatSegmentsRequestParameters requestParameters = null)
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/segments", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/segments <para>https://opensearch.org/docs/latest/api-reference/cat/cat-segments/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.segments", "")]
        public Task<TResponse> SegmentsAsync<TResponse>(
            CatSegmentsRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/segments",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/segments/{index} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-segments/</para></summary>
        /// <param name="index">A comma-separated list of data streams, indices, and aliases used to limit the request. Supports wildcards (`*`). To target all data streams and indices, omit this parameter or use `*` or `_all`.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Segments<TResponse>(
            string index,
            CatSegmentsRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                Url($"_cat/segments/{index:index}"),
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/segments/{index} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-segments/</para></summary>
        /// <param name="index">A comma-separated list of data streams, indices, and aliases used to limit the request. Supports wildcards (`*`). To target all data streams and indices, omit this parameter or use `*` or `_all`.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.segments", "index")]
        public Task<TResponse> SegmentsAsync<TResponse>(
            string index,
            CatSegmentsRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                Url($"_cat/segments/{index:index}"),
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/shards <para>https://opensearch.org/docs/latest/api-reference/cat/cat-shards/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Shards<TResponse>(CatShardsRequestParameters requestParameters = null)
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/shards", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/shards <para>https://opensearch.org/docs/latest/api-reference/cat/cat-shards/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.shards", "")]
        public Task<TResponse> ShardsAsync<TResponse>(
            CatShardsRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/shards",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/shards/{index} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-shards/</para></summary>
        /// <param name="index">A comma-separated list of data streams, indices, and aliases used to limit the request. Supports wildcards (`*`). To target all data streams and indices, omit this parameter or use `*` or `_all`.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Shards<TResponse>(
            string index,
            CatShardsRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                Url($"_cat/shards/{index:index}"),
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/shards/{index} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-shards/</para></summary>
        /// <param name="index">A comma-separated list of data streams, indices, and aliases used to limit the request. Supports wildcards (`*`). To target all data streams and indices, omit this parameter or use `*` or `_all`.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.shards", "index")]
        public Task<TResponse> ShardsAsync<TResponse>(
            string index,
            CatShardsRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                Url($"_cat/shards/{index:index}"),
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/snapshots <para>https://opensearch.org/docs/latest/api-reference/cat/cat-snapshots/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Snapshots<TResponse>(
            CatSnapshotsRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/snapshots", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/snapshots <para>https://opensearch.org/docs/latest/api-reference/cat/cat-snapshots/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.snapshots", "")]
        public Task<TResponse> SnapshotsAsync<TResponse>(
            CatSnapshotsRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/snapshots",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/snapshots/{repository} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-snapshots/</para></summary>
        /// <param name="repository">A comma-separated list of snapshot repositories used to limit the request. Accepts wildcard expressions. `_all` returns all repositories. If any repository fails during the request, OpenSearch returns an error.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Snapshots<TResponse>(
            string repository,
            CatSnapshotsRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                Url($"_cat/snapshots/{repository:repository}"),
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/snapshots/{repository} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-snapshots/</para></summary>
        /// <param name="repository">A comma-separated list of snapshot repositories used to limit the request. Accepts wildcard expressions. `_all` returns all repositories. If any repository fails during the request, OpenSearch returns an error.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.snapshots", "repository")]
        public Task<TResponse> SnapshotsAsync<TResponse>(
            string repository,
            CatSnapshotsRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                Url($"_cat/snapshots/{repository:repository}"),
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/tasks <para>https://opensearch.org/docs/latest/api-reference/cat/cat-tasks/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Tasks<TResponse>(CatTasksRequestParameters requestParameters = null)
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/tasks", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/tasks <para>https://opensearch.org/docs/latest/api-reference/cat/cat-tasks/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.tasks", "")]
        public Task<TResponse> TasksAsync<TResponse>(
            CatTasksRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/tasks",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/templates <para>https://opensearch.org/docs/latest/api-reference/cat/cat-templates/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Templates<TResponse>(
            CatTemplatesRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/templates", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/templates <para>https://opensearch.org/docs/latest/api-reference/cat/cat-templates/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.templates", "")]
        public Task<TResponse> TemplatesAsync<TResponse>(
            CatTemplatesRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/templates",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/templates/{name} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-templates/</para></summary>
        /// <param name="name">The name of the template to return. Accepts wildcard expressions. If omitted, all templates are returned.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse Templates<TResponse>(
            string name,
            CatTemplatesRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                Url($"_cat/templates/{name:name}"),
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/templates/{name} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-templates/</para></summary>
        /// <param name="name">The name of the template to return. Accepts wildcard expressions. If omitted, all templates are returned.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.templates", "name")]
        public Task<TResponse> TemplatesAsync<TResponse>(
            string name,
            CatTemplatesRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                Url($"_cat/templates/{name:name}"),
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/thread_pool <para>https://opensearch.org/docs/latest/api-reference/cat/cat-thread-pool/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse ThreadPool<TResponse>(
            CatThreadPoolRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(GET, "_cat/thread_pool", null, RequestParams(requestParameters));

        /// <summary>GET on /_cat/thread_pool <para>https://opensearch.org/docs/latest/api-reference/cat/cat-thread-pool/</para></summary>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.thread_pool", "")]
        public Task<TResponse> ThreadPoolAsync<TResponse>(
            CatThreadPoolRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                "_cat/thread_pool",
                ctx,
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/thread_pool/{thread_pool_patterns} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-thread-pool/</para></summary>
        /// <param name="threadPoolPatterns">A comma-separated list of thread pool names used to limit the request. Accepts wildcard expressions.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        public TResponse ThreadPool<TResponse>(
            string threadPoolPatterns,
            CatThreadPoolRequestParameters requestParameters = null
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequest<TResponse>(
                GET,
                Url($"_cat/thread_pool/{threadPoolPatterns:threadPoolPatterns}"),
                null,
                RequestParams(requestParameters)
            );

        /// <summary>GET on /_cat/thread_pool/{thread_pool_patterns} <para>https://opensearch.org/docs/latest/api-reference/cat/cat-thread-pool/</para></summary>
        /// <param name="threadPoolPatterns">A comma-separated list of thread pool names used to limit the request. Accepts wildcard expressions.</param>
        /// <param name="requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
        [MapsApi("cat.thread_pool", "thread_pool_patterns")]
        public Task<TResponse> ThreadPoolAsync<TResponse>(
            string threadPoolPatterns,
            CatThreadPoolRequestParameters requestParameters = null,
            CancellationToken ctx = default
        )
            where TResponse : class, IOpenSearchResponse, new() =>
            DoRequestAsync<TResponse>(
                GET,
                Url($"_cat/thread_pool/{threadPoolPatterns:threadPoolPatterns}"),
                ctx,
                null,
                RequestParams(requestParameters)
            );
    }
}
